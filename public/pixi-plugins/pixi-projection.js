/*!
 * pixi-projection - v1.0.0
 * Compiled Mon, 24 Apr 2023 10:12:46 UTC
 *
 * pixi-projection is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 * 
 * Copyright 2023, Ivan Popelyshev, All Rights Reserved
 */this.PIXI=this.PIXI||{},this.PIXI.projection=function(v,j,N,gt,D,At,k,ot,Z,It,Rt){"use strict";var Et=(t=>(t[t.WEBGL_LEGACY=0]="WEBGL_LEGACY",t[t.WEBGL=1]="WEBGL",t[t.WEBGL2=2]="WEBGL2",t))(Et||{}),Kt=(t=>(t[t.UNKNOWN=0]="UNKNOWN",t[t.WEBGL=1]="WEBGL",t[t.CANVAS=2]="CANVAS",t))(Kt||{}),Yt=(t=>(t[t.COLOR=16384]="COLOR",t[t.DEPTH=256]="DEPTH",t[t.STENCIL=1024]="STENCIL",t))(Yt||{}),te=(t=>(t[t.NORMAL=0]="NORMAL",t[t.ADD=1]="ADD",t[t.MULTIPLY=2]="MULTIPLY",t[t.SCREEN=3]="SCREEN",t[t.OVERLAY=4]="OVERLAY",t[t.DARKEN=5]="DARKEN",t[t.LIGHTEN=6]="LIGHTEN",t[t.COLOR_DODGE=7]="COLOR_DODGE",t[t.COLOR_BURN=8]="COLOR_BURN",t[t.HARD_LIGHT=9]="HARD_LIGHT",t[t.SOFT_LIGHT=10]="SOFT_LIGHT",t[t.DIFFERENCE=11]="DIFFERENCE",t[t.EXCLUSION=12]="EXCLUSION",t[t.HUE=13]="HUE",t[t.SATURATION=14]="SATURATION",t[t.COLOR=15]="COLOR",t[t.LUMINOSITY=16]="LUMINOSITY",t[t.NORMAL_NPM=17]="NORMAL_NPM",t[t.ADD_NPM=18]="ADD_NPM",t[t.SCREEN_NPM=19]="SCREEN_NPM",t[t.NONE=20]="NONE",t[t.SRC_OVER=0]="SRC_OVER",t[t.SRC_IN=21]="SRC_IN",t[t.SRC_OUT=22]="SRC_OUT",t[t.SRC_ATOP=23]="SRC_ATOP",t[t.DST_OVER=24]="DST_OVER",t[t.DST_IN=25]="DST_IN",t[t.DST_OUT=26]="DST_OUT",t[t.DST_ATOP=27]="DST_ATOP",t[t.ERASE=26]="ERASE",t[t.SUBTRACT=28]="SUBTRACT",t[t.XOR=29]="XOR",t))(te||{}),zt=(t=>(t[t.POINTS=0]="POINTS",t[t.LINES=1]="LINES",t[t.LINE_LOOP=2]="LINE_LOOP",t[t.LINE_STRIP=3]="LINE_STRIP",t[t.TRIANGLES=4]="TRIANGLES",t[t.TRIANGLE_STRIP=5]="TRIANGLE_STRIP",t[t.TRIANGLE_FAN=6]="TRIANGLE_FAN",t))(zt||{}),ee=(t=>(t[t.RGBA=6408]="RGBA",t[t.RGB=6407]="RGB",t[t.RG=33319]="RG",t[t.RED=6403]="RED",t[t.RGBA_INTEGER=36249]="RGBA_INTEGER",t[t.RGB_INTEGER=36248]="RGB_INTEGER",t[t.RG_INTEGER=33320]="RG_INTEGER",t[t.RED_INTEGER=36244]="RED_INTEGER",t[t.ALPHA=6406]="ALPHA",t[t.LUMINANCE=6409]="LUMINANCE",t[t.LUMINANCE_ALPHA=6410]="LUMINANCE_ALPHA",t[t.DEPTH_COMPONENT=6402]="DEPTH_COMPONENT",t[t.DEPTH_STENCIL=34041]="DEPTH_STENCIL",t))(ee||{}),re=(t=>(t[t.TEXTURE_2D=3553]="TEXTURE_2D",t[t.TEXTURE_CUBE_MAP=34067]="TEXTURE_CUBE_MAP",t[t.TEXTURE_2D_ARRAY=35866]="TEXTURE_2D_ARRAY",t[t.TEXTURE_CUBE_MAP_POSITIVE_X=34069]="TEXTURE_CUBE_MAP_POSITIVE_X",t[t.TEXTURE_CUBE_MAP_NEGATIVE_X=34070]="TEXTURE_CUBE_MAP_NEGATIVE_X",t[t.TEXTURE_CUBE_MAP_POSITIVE_Y=34071]="TEXTURE_CUBE_MAP_POSITIVE_Y",t[t.TEXTURE_CUBE_MAP_NEGATIVE_Y=34072]="TEXTURE_CUBE_MAP_NEGATIVE_Y",t[t.TEXTURE_CUBE_MAP_POSITIVE_Z=34073]="TEXTURE_CUBE_MAP_POSITIVE_Z",t[t.TEXTURE_CUBE_MAP_NEGATIVE_Z=34074]="TEXTURE_CUBE_MAP_NEGATIVE_Z",t))(re||{}),R=(t=>(t[t.UNSIGNED_BYTE=5121]="UNSIGNED_BYTE",t[t.UNSIGNED_SHORT=5123]="UNSIGNED_SHORT",t[t.UNSIGNED_SHORT_5_6_5=33635]="UNSIGNED_SHORT_5_6_5",t[t.UNSIGNED_SHORT_4_4_4_4=32819]="UNSIGNED_SHORT_4_4_4_4",t[t.UNSIGNED_SHORT_5_5_5_1=32820]="UNSIGNED_SHORT_5_5_5_1",t[t.UNSIGNED_INT=5125]="UNSIGNED_INT",t[t.UNSIGNED_INT_10F_11F_11F_REV=35899]="UNSIGNED_INT_10F_11F_11F_REV",t[t.UNSIGNED_INT_2_10_10_10_REV=33640]="UNSIGNED_INT_2_10_10_10_REV",t[t.UNSIGNED_INT_24_8=34042]="UNSIGNED_INT_24_8",t[t.UNSIGNED_INT_5_9_9_9_REV=35902]="UNSIGNED_INT_5_9_9_9_REV",t[t.BYTE=5120]="BYTE",t[t.SHORT=5122]="SHORT",t[t.INT=5124]="INT",t[t.FLOAT=5126]="FLOAT",t[t.FLOAT_32_UNSIGNED_INT_24_8_REV=36269]="FLOAT_32_UNSIGNED_INT_24_8_REV",t[t.HALF_FLOAT=36193]="HALF_FLOAT",t))(R||{}),ie=(t=>(t[t.FLOAT=0]="FLOAT",t[t.INT=1]="INT",t[t.UINT=2]="UINT",t))(ie||{}),se=(t=>(t[t.NEAREST=0]="NEAREST",t[t.LINEAR=1]="LINEAR",t))(se||{}),nt=(t=>(t[t.CLAMP=33071]="CLAMP",t[t.REPEAT=10497]="REPEAT",t[t.MIRRORED_REPEAT=33648]="MIRRORED_REPEAT",t))(nt||{}),ae=(t=>(t[t.OFF=0]="OFF",t[t.POW2=1]="POW2",t[t.ON=2]="ON",t[t.ON_MANUAL=3]="ON_MANUAL",t))(ae||{}),oe=(t=>(t[t.NPM=0]="NPM",t[t.UNPACK=1]="UNPACK",t[t.PMA=2]="PMA",t[t.NO_PREMULTIPLIED_ALPHA=0]="NO_PREMULTIPLIED_ALPHA",t[t.PREMULTIPLY_ON_UPLOAD=1]="PREMULTIPLY_ON_UPLOAD",t[t.PREMULTIPLIED_ALPHA=2]="PREMULTIPLIED_ALPHA",t))(oe||{}),ne=(t=>(t[t.NO=0]="NO",t[t.YES=1]="YES",t[t.AUTO=2]="AUTO",t[t.BLEND=0]="BLEND",t[t.CLEAR=1]="CLEAR",t[t.BLIT=2]="BLIT",t))(ne||{}),he=(t=>(t[t.AUTO=0]="AUTO",t[t.MANUAL=1]="MANUAL",t))(he||{}),le=(t=>(t.LOW="lowp",t.MEDIUM="mediump",t.HIGH="highp",t))(le||{}),ce=(t=>(t[t.NONE=0]="NONE",t[t.SCISSOR=1]="SCISSOR",t[t.STENCIL=2]="STENCIL",t[t.SPRITE=3]="SPRITE",t[t.COLOR=4]="COLOR",t))(ce||{}),ue=(t=>(t[t.RED=1]="RED",t[t.GREEN=2]="GREEN",t[t.BLUE=4]="BLUE",t[t.ALPHA=8]="ALPHA",t))(ue||{}),de=(t=>(t[t.NONE=0]="NONE",t[t.LOW=2]="LOW",t[t.MEDIUM=4]="MEDIUM",t[t.HIGH=8]="HIGH",t))(de||{}),pe=(t=>(t[t.ELEMENT_ARRAY_BUFFER=34963]="ELEMENT_ARRAY_BUFFER",t[t.ARRAY_BUFFER=34962]="ARRAY_BUFFER",t[t.UNIFORM_BUFFER=35345]="UNIFORM_BUFFER",t))(pe||{});const me=`precision highp float;
attribute vec3 aVertexPosition;
attribute vec2 aTextureCoord;
attribute vec4 aColor;
attribute float aTextureId;

uniform mat3 projectionMatrix;

varying vec2 vTextureCoord;
varying vec4 vColor;
varying float vTextureId;

void main(void){
gl_Position.xyw = projectionMatrix * aVertexPosition;
gl_Position.z = 0.0;

vTextureCoord = aTextureCoord;
vTextureId = aTextureId;
vColor = aColor;
}
`,fe=`
varying vec2 vTextureCoord;
varying vec4 vColor;
varying float vTextureId;
uniform sampler2D uSamplers[%count%];

void main(void){
vec4 color;
%forloop%
gl_FragColor = color * vColor;
}`;class Vt extends j.Geometry{constructor(r=!1){super(),this._buffer=new j.Buffer(null,r,!1),this._indexBuffer=new j.Buffer(null,r,!0),this.addAttribute("aVertexPosition",this._buffer,3,!1,R.FLOAT).addAttribute("aTextureCoord",this._buffer,2,!1,R.FLOAT).addAttribute("aColor",this._buffer,4,!0,R.UNSIGNED_BYTE).addAttribute("aTextureId",this._buffer,1,!0,R.FLOAT).addIndex(this._indexBuffer)}}class wt extends j.BatchRenderer{constructor(r){super(r),this.geometryClass=Vt,this.vertexSize=7}setShaderGenerator(){this.shaderGenerator=new j.BatchShaderGenerator(me,fe)}packInterleavedGeometry(r,e,i,a,s){const{uint32View:o,float32View:n}=e,h=a/this.vertexSize,p=r.uvs,l=r.indices,d=r.vertexData,u=r.vertexData2d,c=r._texture.baseTexture._batchLocation,m=Math.min(r.worldAlpha,1),f=j.Color.shared.setValue(r._tintRGB).toPremultiplied(m);if(u){let y=0;for(let x=0;x<u.length;x+=3,y+=2)n[a++]=u[x],n[a++]=u[x+1],n[a++]=u[x+2],n[a++]=p[y],n[a++]=p[y+1],o[a++]=f,n[a++]=c}else for(let y=0;y<d.length;y+=2)n[a++]=d[y],n[a++]=d[y+1],n[a++]=1,n[a++]=p[y],n[a++]=p[y+1],o[a++]=f,n[a++]=c;for(let y=0;y<l.length;y++)i[s++]=h+l[y]}}wt.extension={name:"batch2d",type:j.ExtensionType.RendererPlugin};class bt{constructor(r,e=!0){this._enabled=!1,this.legacy=r,e&&(this.enabled=!0),this.legacy.proj=this}get enabled(){return this._enabled}set enabled(r){this._enabled=r}clear(){}}var U=(t=>(t[t.NONE=0]="NONE",t[t.BEFORE_PROJ=4]="BEFORE_PROJ",t[t.PROJ=5]="PROJ",t[t.ALL=9]="ALL",t))(U||{}),X=(t=>(t[t.NONE=0]="NONE",t[t.FREE=1]="FREE",t[t.AXIS_X=2]="AXIS_X",t[t.AXIS_Y=3]="AXIS_Y",t[t.POINT=4]="POINT",t[t.AXIS_XR=5]="AXIS_XR",t))(X||{});function Mt(t){const r=this.proj,e=this,i=t._worldID,a=e.localTransform,s=r.scaleAfterAffine&&r.affine>=2;e._localID!==e._currentLocalID&&(s?(a.a=e._cx,a.b=e._sx,a.c=e._cy,a.d=e._sy,a.tx=e.position._x,a.ty=e.position._y):(a.a=e._cx*e.scale._x,a.b=e._sx*e.scale._x,a.c=e._cy*e.scale._y,a.d=e._sy*e.scale._y,a.tx=e.position._x-(e.pivot._x*a.a+e.pivot._y*a.c),a.ty=e.position._y-(e.pivot._x*a.b+e.pivot._y*a.d)),e._currentLocalID=e._localID,r._currentProjID=-1);const o=r._projID;if(r._currentProjID!==o&&(r._currentProjID=o,r.updateLocalTransform(a),e._parentID=-1),e._parentID!==i){const n=t.proj;n&&!n._affine?r.world.setToMult(n.world,r.local):r.world.setToMultLegacy(t.worldTransform,r.local);const h=e.worldTransform;r.world.copyTo(h,r._affine,r.affinePreserveOrientation),s&&(h.a*=e.scale._x,h.b*=e.scale._x,h.c*=e.scale._y,h.d*=e.scale._y,h.tx-=e.pivot._x*h.a+e.pivot._y*h.c,h.ty-=e.pivot._x*h.b+e.pivot._y*h.d),e._parentID=i,e._worldID++}}class jt extends bt{constructor(){super(...arguments),this._projID=0,this._currentProjID=-1,this._affine=0,this.affinePreserveOrientation=!1,this.scaleAfterAffine=!0}updateLocalTransform(r){}set affine(r){this._affine!==r&&(this._affine=r,this._currentProjID=-1,this.legacy._currentLocalID=-1)}get affine(){return this._affine}set enabled(r){r!==this._enabled&&(this._enabled=r,r?(this.legacy.updateTransform=Mt,this.legacy._parentID=-1):(this.legacy.updateTransform=N.Transform.prototype.updateTransform,this.legacy._parentID=-1))}clear(){this._currentProjID=-1,this._projID=0}}class Lt extends j.BatchRenderer{constructor(){super(...arguments),this.forceMaxTextures=0,this.defUniforms={}}getUniforms(r){return this.defUniforms}syncUniforms(r){if(!r)return;const e=this._shader;for(const i in r)e.uniforms[i]=r[i]}buildDrawCalls(r,e,i){const a=this,{_bufferedElements:s,_attributeBuffer:o,_indexBuffer:n,vertexSize:h}=this,p=j.BatchRenderer._drawCallPool;let l=this._dcIndex,d=this._aIndex,u=this._iIndex,c=p[l];c.start=this._iIndex,c.texArray=r;for(let m=e;m<i;++m){const f=s[m],y=f._texture.baseTexture,x=gt.premultiplyBlendMode[y.alphaMode?1:0][f.blendMode],g=this.getUniforms(f);s[m]=null,e<m&&(c.blend!==x||c.uniforms!==g)&&(c.size=u-c.start,e=m,c=p[++l],c.texArray=r,c.start=u),this.packInterleavedGeometry(f,o,n,d,u),d+=f.vertexData.length/2*h,u+=f.indices.length,c.blend=x,c.uniforms=g}e<i&&(c.size=u-c.start,++l),a._dcIndex=l,a._aIndex=d,a._iIndex=u}drawBatches(){const r=this._dcIndex,{gl:e,state:i,shader:a}=this.renderer,s=j.BatchRenderer._drawCallPool;let o=null,n=null;for(let h=0;h<r;h++){const{texArray:p,type:l,size:d,start:u,blend:c,uniforms:m}=s[h];n!==p&&(n=p,this.bindAndClearTexArray(p)),o!==m&&(o=m,this.syncUniforms(m),a.syncUniformGroup(this._shader.uniformGroup)),this.state.blendMode=c,i.set(this.state),e.drawElements(l,d,e.UNSIGNED_SHORT,u*2)}}contextChange(){if(!this.forceMaxTextures){super.contextChange(),this.syncUniforms(this.defUniforms);return}const r=this;r.maxTextures=this.forceMaxTextures,this._shader=r.shaderGenerator.generateShader(this.maxTextures),this.syncUniforms(this.defUniforms);for(let e=0;e<r._packedGeometryPoolSize;e++)r._packedGeometries[e]=new this.geometryClass;this.initFlushBuffers()}}j.extensions.add(wt);function Gt(t,r,e,i,a){const s=r.x-t.x,o=e.x-i.x,n=e.x-t.x,h=r.y-t.y,p=e.y-i.y,l=e.y-t.y,d=s*p-h*o;if(Math.abs(d)<1e-7)return a.x=s,a.y=h,0;const u=n*p-l*o,c=s*l-h*n,m=u/d,f=c/d;return f<1e-6||f-1>-1e-6?-1:(a.x=t.x+m*(r.x-t.x),a.y=t.y+m*(r.y-t.y),1)}function ye(t,r,e){e=e||new N.Point;const i=1-r.x,a=1-i,s=1-r.y,o=1-s;return e.x=(t[0].x*i+t[1].x*a)*s+(t[3].x*i+t[2].x*a)*o,e.y=(t[0].y*i+t[1].y*a)*s+(t[3].y*i+t[2].y*a)*o,e}const _e=[1,0,0,0,1,0,0,0,1],ht=class{constructor(t){this.floatArray=null,this.mat3=new Float64Array(t||_e)}get a(){return this.mat3[0]/this.mat3[8]}set a(t){this.mat3[0]=t*this.mat3[8]}get b(){return this.mat3[1]/this.mat3[8]}set b(t){this.mat3[1]=t*this.mat3[8]}get c(){return this.mat3[3]/this.mat3[8]}set c(t){this.mat3[3]=t*this.mat3[8]}get d(){return this.mat3[4]/this.mat3[8]}set d(t){this.mat3[4]=t*this.mat3[8]}get tx(){return this.mat3[6]/this.mat3[8]}set tx(t){this.mat3[6]=t*this.mat3[8]}get ty(){return this.mat3[7]/this.mat3[8]}set ty(t){this.mat3[7]=t*this.mat3[8]}set(t,r,e,i,a,s){const o=this.mat3;return o[0]=t,o[1]=r,o[2]=0,o[3]=e,o[4]=i,o[5]=0,o[6]=a,o[7]=s,o[8]=1,this}toArray(t,r){this.floatArray||(this.floatArray=new Float32Array(9));const e=r||this.floatArray,i=this.mat3;return t?(e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8]):(e[0]=i[0],e[1]=i[3],e[2]=i[6],e[3]=i[1],e[4]=i[4],e[5]=i[7],e[6]=i[2],e[7]=i[5],e[8]=i[8]),e}apply(t,r){r=r||new N.Point;const e=this.mat3,i=t.x,a=t.y,s=1/(e[2]*i+e[5]*a+e[8]);return r.x=s*(e[0]*i+e[3]*a+e[6]),r.y=s*(e[1]*i+e[4]*a+e[7]),r}translate(t,r){const e=this.mat3;return e[0]+=t*e[2],e[1]+=r*e[2],e[3]+=t*e[5],e[4]+=r*e[5],e[6]+=t*e[8],e[7]+=r*e[8],this}scale(t,r){const e=this.mat3;return e[0]*=t,e[1]*=r,e[3]*=t,e[4]*=r,e[6]*=t,e[7]*=r,this}scaleAndTranslate(t,r,e,i){const a=this.mat3;a[0]=t*a[0]+e*a[2],a[1]=r*a[1]+i*a[2],a[3]=t*a[3]+e*a[5],a[4]=r*a[4]+i*a[5],a[6]=t*a[6]+e*a[8],a[7]=r*a[7]+i*a[8]}applyInverse(t,r){r=r||new N.Point;const e=this.mat3,i=t.x,a=t.y,s=e[0],o=e[3],n=e[6],h=e[1],p=e[4],l=e[7],d=e[2],u=e[5],c=e[8],m=(c*p-l*u)*i+(-c*o+n*u)*a+(l*o-n*p),f=(-c*h+l*d)*i+(c*s-n*d)*a+(-l*s+n*h),y=(u*h-p*d)*i+(-u*s+o*d)*a+(p*s-o*h);return r.x=m/y,r.y=f/y,r}invert(){const t=this.mat3,r=t[0],e=t[1],i=t[2],a=t[3],s=t[4],o=t[5],n=t[6],h=t[7],p=t[8],l=p*s-o*h,d=-p*a+o*n,u=h*a-s*n;let c=r*l+e*d+i*u;return c?(c=1/c,t[0]=l*c,t[1]=(-p*e+i*h)*c,t[2]=(o*e-i*s)*c,t[3]=d*c,t[4]=(p*r-i*n)*c,t[5]=(-o*r+i*a)*c,t[6]=u*c,t[7]=(-h*r+e*n)*c,t[8]=(s*r-e*a)*c,this):this}identity(){const t=this.mat3;return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1,this}clone(){return new ht(this.mat3)}copyTo2dOr3d(t){const r=this.mat3,e=t.mat3;return e[0]=r[0],e[1]=r[1],e[2]=r[2],e[3]=r[3],e[4]=r[4],e[5]=r[5],e[6]=r[6],e[7]=r[7],e[8]=r[8],t}copyTo(t,r,e){const i=this.mat3,a=1/i[8],s=i[6]*a,o=i[7]*a;if(t.a=(i[0]-i[2]*s)*a,t.b=(i[1]-i[2]*o)*a,t.c=(i[3]-i[5]*s)*a,t.d=(i[4]-i[5]*o)*a,t.tx=s,t.ty=o,r>=2){let n=t.a*t.d-t.b*t.c;e||(n=Math.abs(n)),r===X.POINT?(n>0?n=1:n=-1,t.a=n,t.b=0,t.c=0,t.d=n):r===X.AXIS_X?(n/=Math.sqrt(t.b*t.b+t.d*t.d),t.c=0,t.d=n):r===X.AXIS_Y?(n/=Math.sqrt(t.a*t.a+t.c*t.c),t.a=n,t.c=0):r===X.AXIS_XR&&(t.a=t.d*n,t.c=-t.b*n)}return t}copyFrom(t){const r=this.mat3;return r[0]=t.a,r[1]=t.b,r[2]=0,r[3]=t.c,r[4]=t.d,r[5]=0,r[6]=t.tx,r[7]=t.ty,r[8]=1,this}setToMultLegacy(t,r){const e=this.mat3,i=r.mat3,a=t.a,s=t.b,o=t.c,n=t.d,h=t.tx,p=t.ty,l=i[0],d=i[1],u=i[2],c=i[3],m=i[4],f=i[5],y=i[6],x=i[7],g=i[8];return e[0]=l*a+d*o+u*h,e[1]=l*s+d*n+u*p,e[2]=u,e[3]=c*a+m*o+f*h,e[4]=c*s+m*n+f*p,e[5]=f,e[6]=y*a+x*o+g*h,e[7]=y*s+x*n+g*p,e[8]=g,this}setToMultLegacy2(t,r){const e=this.mat3,i=t.mat3,a=i[0],s=i[1],o=i[2],n=i[3],h=i[4],p=i[5],l=i[6],d=i[7],u=i[8],c=r.a,m=r.b,f=r.c,y=r.d,x=r.tx,g=r.ty;return e[0]=c*a+m*n,e[1]=c*s+m*h,e[2]=c*o+m*p,e[3]=f*a+y*n,e[4]=f*s+y*h,e[5]=f*o+y*p,e[6]=x*a+g*n+l,e[7]=x*s+g*h+d,e[8]=x*o+g*p+u,this}setToMult(t,r){const e=this.mat3,i=t.mat3,a=r.mat3,s=i[0],o=i[1],n=i[2],h=i[3],p=i[4],l=i[5],d=i[6],u=i[7],c=i[8],m=a[0],f=a[1],y=a[2],x=a[3],g=a[4],T=a[5],I=a[6],w=a[7],b=a[8];return e[0]=m*s+f*h+y*d,e[1]=m*o+f*p+y*u,e[2]=m*n+f*l+y*c,e[3]=x*s+g*h+T*d,e[4]=x*o+g*p+T*u,e[5]=x*n+g*l+T*c,e[6]=I*s+w*h+b*d,e[7]=I*o+w*p+b*u,e[8]=I*n+w*l+b*c,this}prepend(t){return t.mat3?this.setToMult(t,this):this.setToMultLegacy(t,this)}};let z=ht;z.IDENTITY=new ht,z.TEMP_MATRIX=new ht;const Dt=`attribute vec2 aVertexPosition;
attribute vec2 aTextureCoord;

uniform mat3 projectionMatrix;
uniform mat3 translationMatrix;
uniform mat3 uTransform;

varying vec3 vTextureCoord;

void main(void)
{
gl_Position.xyw = projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0);

vTextureCoord = uTransform * vec3(aTextureCoord, 1.0);
}
`,xe=`
varying vec3 vTextureCoord;

uniform sampler2D uSampler;
uniform vec4 uColor;
uniform mat3 uMapCoord;
uniform vec4 uClampFrame;
uniform vec2 uClampOffset;

void main(void)
{
vec2 coord = mod(vTextureCoord.xy / vTextureCoord.z - uClampOffset, vec2(1.0, 1.0)) + uClampOffset;
coord = (uMapCoord * vec3(coord, 1.0)).xy;
coord = clamp(coord, uClampFrame.xy, uClampFrame.zw);

vec4 sample = texture2D(uSampler, coord);
gl_FragColor = sample * uColor;
}
`,ve=`
varying vec3 vTextureCoord;

uniform sampler2D uSampler;
uniform vec4 uColor;

void main(void)
{
vec4 sample = texture2D(uSampler, vTextureCoord.xy / vTextureCoord.z);
gl_FragColor = sample * uColor;
}
`,O=new z;class Nt extends j.ObjectRenderer{constructor(r){super(r),this.quad=new j.QuadUv;const e={globals:this.renderer.globalUniforms};this.shader=j.Shader.from(Dt,xe,e),this.simpleShader=j.Shader.from(Dt,ve,e)}render(r){const e=this.renderer,i=this.quad;let a=i.vertices;a[0]=a[6]=r._width*-r.anchor.x,a[1]=a[3]=r._height*-r.anchor.y,a[2]=a[4]=r._width*(1-r.anchor.x),a[5]=a[7]=r._height*(1-r.anchor.y),r.uvRespectAnchor&&(a=i.uvs,a[0]=a[6]=-r.anchor.x,a[1]=a[3]=-r.anchor.y,a[2]=a[4]=1-r.anchor.x,a[5]=a[7]=1-r.anchor.y),i.invalidate();const s=r._texture,o=s.baseTexture,n=r.tileProj.world,h=r.uvMatrix;let p=o.isPowerOfTwo&&s.frame.width===o.width&&s.frame.height===o.height;p&&(o._glTextures[e.CONTEXT_UID]?p=o.wrapMode!==nt.CLAMP:o.wrapMode===nt.CLAMP&&(o.wrapMode=nt.REPEAT));const l=p?this.simpleShader:this.shader;O.identity(),O.scale(s.width,s.height),O.prepend(n),O.scale(1/r._width,1/r._height),O.invert(),p?O.prepend(h.mapCoord):(l.uniforms.uMapCoord=h.mapCoord.toArray(!0),l.uniforms.uClampFrame=h.uClampFrame,l.uniforms.uClampOffset=h.uClampOffset),l.uniforms.uTransform=O.toArray(!0),l.uniforms.uColor=gt.premultiplyTintToRgba(r.tint,r.worldAlpha,l.uniforms.uColor,o.premultiplyAlpha),l.uniforms.translationMatrix=r.worldTransform.toArray(!0),l.uniforms.uSampler=s,e.shader.bind(l,!1),e.geometry.bind(i,void 0),e.state.setBlendMode(gt.correctBlendMode(r.blendMode,o.premultiplyAlpha)),e.geometry.draw(zt.TRIANGLES,6,0)}}Nt.extension={name:"tilingSprite2d",type:j.ExtensionType.RendererPlugin};const P=new N.Point,M=[new N.Point,new N.Point,new N.Point,new N.Point],E=new N.Rectangle,Xt=new z;class q extends jt{constructor(r,e){super(r,e),this.matrix=new z,this.pivot=new N.ObservablePoint(this.onChange,this,0,0),this.reverseLocalOrder=!1,this.local=new z,this.world=new z}onChange(){const r=this.pivot,e=this.matrix.mat3;e[6]=-(r._x*e[0]+r._y*e[3]),e[7]=-(r._x*e[1]+r._y*e[4]),this._projID++}setAxisX(r,e=1){const i=r.x,a=r.y,s=Math.sqrt(i*i+a*a),o=this.matrix.mat3;o[0]=i/s,o[1]=a/s,o[2]=e/s,this.onChange()}setAxisY(r,e=1){const i=r.x,a=r.y,s=Math.sqrt(i*i+a*a),o=this.matrix.mat3;o[3]=i/s,o[4]=a/s,o[5]=e/s,this.onChange()}mapSprite(r,e){const i=r.texture;E.x=-r.anchor.x*i.orig.width,E.y=-r.anchor.y*i.orig.height,E.width=i.orig.width,E.height=i.orig.height,this.mapQuad(E,e)}mapQuad(r,e){M[0].set(r.x,r.y),M[1].set(r.x+r.width,r.y),M[2].set(r.x+r.width,r.y+r.height),M[3].set(r.x,r.y+r.height);let i=1,a=2,s=3;if(Gt(e[0],e[2],e[1],e[3],P)!==0)i=1,a=3,s=2;else return;const o=Math.sqrt((e[0].x-P.x)*(e[0].x-P.x)+(e[0].y-P.y)*(e[0].y-P.y)),n=Math.sqrt((e[i].x-P.x)*(e[i].x-P.x)+(e[i].y-P.y)*(e[i].y-P.y)),h=Math.sqrt((e[a].x-P.x)*(e[a].x-P.x)+(e[a].y-P.y)*(e[a].y-P.y)),p=Math.sqrt((e[s].x-P.x)*(e[s].x-P.x)+(e[s].y-P.y)*(e[s].y-P.y)),l=(o+p)/p,d=(n+h)/h,u=(n+h)/n;let c=this.matrix.mat3;c[0]=M[0].x*l,c[1]=M[0].y*l,c[2]=l,c[3]=M[i].x*d,c[4]=M[i].y*d,c[5]=d,c[6]=M[a].x*u,c[7]=M[a].y*u,c[8]=u,this.matrix.invert(),c=Xt.mat3,c[0]=e[0].x,c[1]=e[0].y,c[2]=1,c[3]=e[i].x,c[4]=e[i].y,c[5]=1,c[6]=e[a].x,c[7]=e[a].y,c[8]=1,this.matrix.setToMult(Xt,this.matrix),this._projID++}updateLocalTransform(r){this._projID!==0?this.reverseLocalOrder?this.local.setToMultLegacy2(this.matrix,r):this.local.setToMultLegacy(r,this.matrix):this.local.copyFrom(r)}clear(){super.clear(),this.matrix.identity(),this.pivot.set(0,0)}}function qt(){return this.proj.affine?this.transform.worldTransform:this.proj.world}class lt extends D.Container{constructor(){super(),this.proj=new q(this.transform)}toLocal(r,e,i,a,s=U.ALL){return e&&(r=e.toGlobal(r,i,a)),a||this._recursivePostUpdateTransform(),s>=U.PROJ?(a||this.displayObjectUpdateTransform(),this.proj.affine?this.transform.worldTransform.applyInverse(r,i):this.proj.world.applyInverse(r,i)):(this.parent?i=this.parent.worldTransform.applyInverse(r,i):(i.x=r.x,i.y=r.y),s===U.NONE?i:this.transform.localTransform.applyInverse(i,i))}get worldTransform(){return this.proj.affine?this.transform.worldTransform:this.proj.world}}const ct=lt.prototype.toLocal;class F extends k.Mesh{constructor(r,e,i,a){super(r,e,i,a),this.vertexData2d=null,this.proj=new q(this.transform)}calculateVertices(){if(this.proj._affine){this.vertexData2d=null,super.calculateVertices();return}const r=this.geometry,e=r.buffers[0].data,i=this;if(r.vertexDirtyId===i.vertexDirty&&i._transformID===i.transform._worldID)return;i._transformID=i.transform._worldID,i.vertexData.length!==e.length&&(i.vertexData=new Float32Array(e.length)),(!this.vertexData2d||this.vertexData2d.length!==e.length*3/2)&&(this.vertexData2d=new Float32Array(e.length*3));const a=this.proj.world.mat3,s=this.vertexData2d,o=i.vertexData;for(let n=0;n<o.length/2;n++){const h=e[n*2],p=e[n*2+1],l=a[0]*h+a[3]*p+a[6],d=a[1]*h+a[4]*p+a[7],u=a[2]*h+a[5]*p+a[8];s[n*3]=l,s[n*3+1]=d,s[n*3+2]=u,o[n*2]=l/u,o[n*2+1]=d/u}i.vertexDirty=r.vertexDirtyId}_renderDefault(r){var e;const i=this.shader;i.alpha=this.worldAlpha,i.update&&i.update(),r.batch.flush(),(e=i.program.uniformData)!=null&&e.translationMatrix&&(i.uniforms.translationMatrix=this.worldTransform.toArray(!0)),r.shader.bind(i,!1),r.state.set(this.state),r.geometry.bind(this.geometry,i),r.geometry.draw(this.drawMode,this.size,this.start,this.geometry.instanceCount)}toLocal(r,e,i,a,s=U.ALL){return ct.call(this,r,e,i,a,s)}get worldTransform(){return this.proj.affine?this.transform.worldTransform:this.proj.world}}F.defaultVertexShader=`precision highp float;
attribute vec2 aVertexPosition;
attribute vec2 aTextureCoord;

uniform mat3 projectionMatrix;
uniform mat3 translationMatrix;
uniform mat3 uTextureMatrix;

varying vec2 vTextureCoord;

void main(void)
{
gl_Position.xyw = projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0);
gl_Position.z = 0.0;

vTextureCoord = (uTextureMatrix * vec3(aTextureCoord, 1.0)).xy;
}
`,F.defaultFragmentShader=`
varying vec2 vTextureCoord;
uniform vec4 uColor;

uniform sampler2D uSampler;

void main(void)
{
gl_FragColor = texture2D(uSampler, vTextureCoord) * uColor;
}`;class Bt extends F{constructor(r,e,i,a,s){super(new k.MeshGeometry(e,i,a),new k.MeshMaterial(r,{program:j.Program.from(F.defaultVertexShader,F.defaultFragmentShader),pluginName:"batch2d"}),null,s),this.autoUpdate=!0,this.geometry.getBuffer("aVertexPosition").static=!1}get vertices(){return this.geometry.getBuffer("aVertexPosition").data}set vertices(r){this.geometry.getBuffer("aVertexPosition").data=r}_render(r){this.autoUpdate&&this.geometry.getBuffer("aVertexPosition").update(),super._render(r)}}class L extends Z.Sprite{constructor(r){super(r),this.vertexData2d=null,this.proj=new q(this.transform),this.pluginName="batch2d"}_calculateBounds(){this.calculateTrimmedVertices(),this._bounds.addQuad(this.vertexTrimmedData)}calculateVertices(){const r=this._texture,e=this;if(this.proj._affine){this.vertexData2d=null,super.calculateVertices();return}this.vertexData2d||(this.vertexData2d=new Float32Array(12));const i=this.transform._worldID,a=r._updateID;if(e._transformID===i&&this._textureID===a)return;this._textureID!==a&&(this.uvs=r._uvs.uvsFloat32),e._transformID=i,this._textureID=a;const s=this.proj.world.mat3,o=this.vertexData2d,n=this.vertexData,h=r.trim,p=r.orig,l=this._anchor;let d,u,c,m;h?(u=h.x-l._x*p.width,d=u+h.width,m=h.y-l._y*p.height,c=m+h.height):(u=-l._x*p.width,d=u+p.width,m=-l._y*p.height,c=m+p.height),o[0]=s[0]*u+s[3]*m+s[6],o[1]=s[1]*u+s[4]*m+s[7],o[2]=s[2]*u+s[5]*m+s[8],o[3]=s[0]*d+s[3]*m+s[6],o[4]=s[1]*d+s[4]*m+s[7],o[5]=s[2]*d+s[5]*m+s[8],o[6]=s[0]*d+s[3]*c+s[6],o[7]=s[1]*d+s[4]*c+s[7],o[8]=s[2]*d+s[5]*c+s[8],o[9]=s[0]*u+s[3]*c+s[6],o[10]=s[1]*u+s[4]*c+s[7],o[11]=s[2]*u+s[5]*c+s[8],n[0]=o[0]/o[2],n[1]=o[1]/o[2],n[2]=o[3]/o[5],n[3]=o[4]/o[5],n[4]=o[6]/o[8],n[5]=o[7]/o[8],n[6]=o[9]/o[11],n[7]=o[10]/o[11]}calculateTrimmedVertices(){if(this.proj._affine){super.calculateTrimmedVertices();return}const r=this.transform._worldID,e=this._texture._updateID,i=this;if(!i.vertexTrimmedData)i.vertexTrimmedData=new Float32Array(8);else if(i._transformTrimmedID===r&&this._textureTrimmedID===e)return;i._transformTrimmedID=r,this._textureTrimmedID=e;const a=this._texture,s=i.vertexTrimmedData,o=a.orig,n=this.tileProj?this._width:o.width,h=this.tileProj?this._height:o.height,p=this._anchor,l=this.proj.world.mat3,d=-p._x*n,u=d+n,c=-p._y*h,m=c+h;let f=1/(l[2]*d+l[5]*c+l[8]);s[0]=f*(l[0]*d+l[3]*c+l[6]),s[1]=f*(l[1]*d+l[4]*c+l[7]),f=1/(l[2]*u+l[5]*c+l[8]),s[2]=f*(l[0]*u+l[3]*c+l[6]),s[3]=f*(l[1]*u+l[4]*c+l[7]),f=1/(l[2]*u+l[5]*m+l[8]),s[4]=f*(l[0]*u+l[3]*m+l[6]),s[5]=f*(l[1]*u+l[4]*m+l[7]),f=1/(l[2]*d+l[5]*m+l[8]),s[6]=f*(l[0]*d+l[3]*m+l[6]),s[7]=f*(l[1]*d+l[4]*m+l[7])}toLocal(r,e,i,a,s=U.ALL){return ct.call(this,r,e,i,a,s)}get worldTransform(){return this.proj.affine?this.transform.worldTransform:this.proj.world}}const Te=new N.Transform;class kt extends At.TilingSprite{constructor(r,e,i){super(r,e,i),this.tileProj=new q(this.tileTransform),this.tileProj.reverseLocalOrder=!0,this.proj=new q(this.transform),this.pluginName="tilingSprite2d",this.uvRespectAnchor=!0}get worldTransform(){return this.proj.affine?this.transform.worldTransform:this.proj.world}toLocal(r,e,i,a,s=U.ALL){return ct.call(this,r,e,i,a,s)}_render(r){const e=this._texture;!e||!e.valid||(this.tileTransform.updateTransform(Te),this.uvMatrix.update(),r.batch.setObjectRenderer(r.plugins[this.pluginName]),r.plugins[this.pluginName].render(this))}}function ut(){this.proj||(this.proj=new q(this.transform),this.toLocal=lt.prototype.toLocal,Object.defineProperty(this,"worldTransform",{get:qt,enumerable:!0,configurable:!0}))}D.Container.prototype.convertTo2d=ut,Z.Sprite.prototype.convertTo2d=function(){this.proj||(this.calculateVertices=L.prototype.calculateVertices,this.calculateTrimmedVertices=L.prototype.calculateTrimmedVertices,this._calculateBounds=L.prototype._calculateBounds,this.pluginName="batch2d",ut.call(this))},D.Container.prototype.convertSubtreeTo2d=function(){this.convertTo2d();for(let t=0;t<this.children.length;t++)this.children[t].convertSubtreeTo2d()},ot.SimpleMesh.prototype.convertTo2d=ot.SimpleRope.prototype.convertTo2d=function(){this.proj||(this.calculateVertices=F.prototype.calculateVertices,this._renderDefault=F.prototype._renderDefault,this.material.pluginName!=="batch2d"&&(this.material=new k.MeshMaterial(this.material.texture,{program:j.Program.from(F.defaultVertexShader,F.defaultFragmentShader),pluginName:"batch2d"})),ut.call(this))},At.TilingSprite.prototype.convertTo2d=function(){this.proj||(this.tileProj=new q(this.tileTransform),this.tileProj.reverseLocalOrder=!0,this.uvRespectAnchor=!0,this.calculateTrimmedVertices=L.prototype.calculateTrimmedVertices,this._calculateBounds=L.prototype._calculateBounds,this._render=kt.prototype._render,this.pluginName="tilingSprite2d",ut.call(this))};class dt extends It.Text{constructor(r,e,i){super(r,e,i),this.vertexData2d=null,this.proj=new q(this.transform),this.pluginName="batch2d"}get worldTransform(){return this.proj.affine?this.transform.worldTransform:this.proj.world}}dt.prototype.calculateVertices=L.prototype.calculateVertices,dt.prototype.calculateTrimmedVertices=L.prototype.calculateTrimmedVertices,dt.prototype._calculateBounds=L.prototype._calculateBounds;const ge=`
attribute vec2 aVertexPosition;
attribute vec2 aTextureCoord;

uniform mat3 projectionMatrix;
uniform mat3 otherMatrix;

varying vec3 vMaskCoord;
varying vec2 vTextureCoord;

void main(void)
{
gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);

vTextureCoord = aTextureCoord;
vMaskCoord = otherMatrix * vec3( aTextureCoord, 1.0);
}
`,Ie=`
varying vec3 vMaskCoord;
varying vec2 vTextureCoord;

uniform sampler2D uSampler;
uniform sampler2D mask;
uniform float alpha;
uniform vec4 maskClamp;

void main(void)
{
vec2 uv = vMaskCoord.xy / vMaskCoord.z;

float clip = step(3.5,
    step(maskClamp.x, uv.x) +
    step(maskClamp.y, uv.y) +
    step(uv.x, maskClamp.z) +
    step(uv.y, maskClamp.w));

vec4 original = texture2D(uSampler, vTextureCoord);
vec4 masky = texture2D(mask, uv);

original *= (masky.r * masky.a * alpha * clip);

gl_FragColor = original;
}
`,Ht=new z;class pt extends j.Filter{constructor(r){super(ge,Ie),this.maskMatrix=new z,r.renderable=!1,this.maskSprite=r}apply(r,e,i,a){const s=this.maskSprite,o=this.maskSprite.texture;o.valid&&(o.uvMatrix||(o.uvMatrix=new j.TextureMatrix(o,0)),o.uvMatrix.update(),this.uniforms.npmAlpha=o.baseTexture.alphaMode?0:1,this.uniforms.mask=s.texture,this.uniforms.otherMatrix=pt.calculateSpriteMatrix(e,this.maskMatrix,s).prepend(o.uvMatrix.mapCoord),this.uniforms.alpha=s.worldAlpha,this.uniforms.maskClamp=o.uvMatrix.uClampFrame,r.applyFilter(this,e,i,a))}static calculateSpriteMatrix(r,e,i){const a=i.proj,s=r.filterFrame,o=a&&!a._affine?a.world.copyTo2dOr3d(Ht):Ht.copyFrom(i.transform.worldTransform),n=i.texture.orig;return e.set(r.width,0,0,r.height,s.x,s.y),o.invert(),e.setToMult(o,e),e.scaleAndTranslate(1/n.width,1/n.height,i.anchor.x,i.anchor.y),e}}const we=j.MaskSystem.prototype.pushSpriteMask;function be(t){const{maskObject:r}=t,e=t._filters;if(!e){let i=this.alphaMaskPool[this.alphaMaskIndex];i||(i=this.alphaMaskPool[this.alphaMaskIndex]=[new pt(r)]),t._filters=i}we.call(this,t),e||(t._filters=null)}function je(){j.MaskSystem.prototype.pushSpriteMask=be}j.extensions.add(Nt);class Ct extends N.Point{constructor(r,e,i){super(r,e),this.z=i}set(r,e,i){return this.x=r||0,this.y=e===void 0?this.x:e||0,this.z=e===void 0?this.x:i||0,this}copyFrom(r){return this.set(r.x,r.y,r.z||0),this}copyTo(r){return r.set(this.x,this.y,this.z),r}}class mt extends N.ObservablePoint{constructor(){super(...arguments),this._z=0}get z(){return this._z}set z(r){this._z!==r&&(this._z=r,this.cb.call(this.scope))}set(r,e,i){const a=r||0,s=e===void 0?a:e||0,o=e===void 0?a:i||0;return(this._x!==a||this._y!==s||this._z!==o)&&(this._x=a,this._y=s,this._z=o,this.cb.call(this.scope)),this}copyFrom(r){return this.set(r.x,r.y,r.z||0),this}copyTo(r){return r.set(this._x,this._y,this._z),r}}class ft{constructor(r,e,i){this._quatUpdateId=-1,this._quatDirtyId=0,this._sign=1,this._x=r||0,this._y=e||0,this._z=i||0,this.quaternion=new Float64Array(4),this.quaternion[3]=1,this.update()}get x(){return this._x}set x(r){this._x!==r&&(this._x=r,this._quatDirtyId++)}get y(){return this._y}set y(r){this._y!==r&&(this._y=r,this._quatDirtyId++)}get z(){return this._z}set z(r){this._z!==r&&(this._z=r,this._quatDirtyId++)}get pitch(){return this._x}set pitch(r){this._x!==r&&(this._x=r,this._quatDirtyId++)}get yaw(){return this._y}set yaw(r){this._y!==r&&(this._y=r,this._quatDirtyId++)}get roll(){return this._z}set roll(r){this._z!==r&&(this._z=r,this._quatDirtyId++)}set(r,e,i){const a=r||0,s=e||0,o=i||0;(this._x!==a||this._y!==s||this._z!==o)&&(this._x=a,this._y=s,this._z=o,this._quatDirtyId++)}copyFrom(r){const e=r.x,i=r.y,a=r.z;return(this._x!==e||this._y!==i||this._z!==a)&&(this._x=e,this._y=i,this._z=a,this._quatDirtyId++),this}copyTo(r){return r.set(this._x,this._y,this._z),r}equals(r){return this._x===r.x&&this._y===r.y&&this._z===r.z}clone(){return new ft(this._x,this._y,this._z)}update(){if(this._quatUpdateId===this._quatDirtyId)return!1;this._quatUpdateId=this._quatDirtyId;const r=Math.cos(this._x/2),e=Math.cos(this._y/2),i=Math.cos(this._z/2),a=this._sign,s=a*Math.sin(this._x/2),o=a*Math.sin(this._y/2),n=a*Math.sin(this._z/2),h=this.quaternion;return h[0]=s*e*i+r*o*n,h[1]=r*o*i-s*e*n,h[2]=r*e*n+s*o*i,h[3]=r*e*i-s*o*n,!0}}class Ot{constructor(r,e,i,a,s){this.cb=r,this.scope=e,this._quatUpdateId=-1,this._quatDirtyId=0,this._sign=1,this._x=i||0,this._y=a||0,this._z=s||0,this.quaternion=new Float64Array(4),this.quaternion[3]=1,this.update()}get x(){return this._x}set x(r){this._x!==r&&(this._x=r,this._quatDirtyId++,this.cb.call(this.scope))}get y(){return this._y}set y(r){this._y!==r&&(this._y=r,this._quatDirtyId++,this.cb.call(this.scope))}get z(){return this._z}set z(r){this._z!==r&&(this._z=r,this._quatDirtyId++,this.cb.call(this.scope))}get pitch(){return this._x}set pitch(r){this._x!==r&&(this._x=r,this._quatDirtyId++,this.cb.call(this.scope))}get yaw(){return this._y}set yaw(r){this._y!==r&&(this._y=r,this._quatDirtyId++,this.cb.call(this.scope))}get roll(){return this._z}set roll(r){this._z!==r&&(this._z=r,this._quatDirtyId++,this.cb.call(this.scope))}set(r,e,i){const a=r||0,s=e||0,o=i||0;return(this._x!==a||this._y!==s||this._z!==o)&&(this._x=a,this._y=s,this._z=o,this._quatDirtyId++,this.cb.call(this.scope)),this}copyFrom(r){const e=r.x,i=r.y,a=r.z;return(this._x!==e||this._y!==i||this._z!==a)&&(this._x=e,this._y=i,this._z=a,this._quatDirtyId++,this.cb.call(this.scope)),this}copyTo(r){return r.set(this._x,this._y,this._z),r}equals(r){return this._x===r.x&&this._y===r.y&&this._z===r.z}clone(){return new ft(this._x,this._y,this._z)}update(){if(this._quatUpdateId===this._quatDirtyId)return!1;this._quatUpdateId=this._quatDirtyId;const r=Math.cos(this._x/2),e=Math.cos(this._y/2),i=Math.cos(this._z/2),a=this._sign,s=a*Math.sin(this._x/2),o=a*Math.sin(this._y/2),n=a*Math.sin(this._z/2),h=this.quaternion;return h[0]=s*e*i+r*o*n,h[1]=r*o*i-s*e*n,h[2]=r*e*n+s*o*i,h[3]=r*e*i-s*o*n,!0}}const Ne=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],H=class{constructor(t){this.floatArray=null,this._dirtyId=0,this._updateId=-1,this._mat4inv=null,this.cacheInverse=!1,this.mat4=new Float64Array(t||Ne)}get a(){return this.mat4[0]/this.mat4[15]}set a(t){this.mat4[0]=t*this.mat4[15]}get b(){return this.mat4[1]/this.mat4[15]}set b(t){this.mat4[1]=t*this.mat4[15]}get c(){return this.mat4[4]/this.mat4[15]}set c(t){this.mat4[4]=t*this.mat4[15]}get d(){return this.mat4[5]/this.mat4[15]}set d(t){this.mat4[5]=t*this.mat4[15]}get tx(){return this.mat4[12]/this.mat4[15]}set tx(t){this.mat4[12]=t*this.mat4[15]}get ty(){return this.mat4[13]/this.mat4[15]}set ty(t){this.mat4[13]=t*this.mat4[15]}set(t,r,e,i,a,s){const o=this.mat4;return o[0]=t,o[1]=r,o[2]=0,o[3]=0,o[4]=e,o[5]=i,o[6]=0,o[7]=0,o[8]=0,o[9]=0,o[10]=1,o[11]=0,o[12]=a,o[13]=s,o[14]=0,o[15]=1,this}toArray(t,r){this.floatArray||(this.floatArray=new Float32Array(9));const e=r||this.floatArray,i=this.mat4;return t?(e[0]=i[0],e[1]=i[1],e[2]=i[3],e[3]=i[4],e[4]=i[5],e[5]=i[7],e[6]=i[12],e[7]=i[13],e[8]=i[15]):(e[0]=i[0],e[1]=i[4],e[2]=i[12],e[3]=i[2],e[4]=i[6],e[5]=i[13],e[6]=i[3],e[7]=i[7],e[8]=i[15]),e}setToTranslation(t,r,e){const i=this.mat4;i[0]=1,i[1]=0,i[2]=0,i[3]=0,i[4]=0,i[5]=1,i[6]=0,i[7]=0,i[8]=0,i[9]=0,i[10]=1,i[11]=0,i[12]=t,i[13]=r,i[14]=e,i[15]=1}setToRotationTranslationScale(t,r,e,i,a,s,o){const n=this.mat4,h=t[0],p=t[1],l=t[2],d=t[3],u=h+h,c=p+p,m=l+l,f=h*u,y=h*c,x=h*m,g=p*c,T=p*m,I=l*m,w=d*u,b=d*c,G=d*m;return n[0]=(1-(g+I))*a,n[1]=(y+G)*a,n[2]=(x-b)*a,n[3]=0,n[4]=(y-G)*s,n[5]=(1-(f+I))*s,n[6]=(T+w)*s,n[7]=0,n[8]=(x+b)*o,n[9]=(T-w)*o,n[10]=(1-(f+g))*o,n[11]=0,n[12]=r,n[13]=e,n[14]=i,n[15]=1,n}apply(t,r){r=r||new Ct;const e=this.mat4,i=t.x,a=t.y,s=t.z||0,o=1/(e[3]*i+e[7]*a+e[11]*s+e[15]);return r.x=o*(e[0]*i+e[4]*a+e[8]*s+e[12]),r.y=o*(e[1]*i+e[5]*a+e[9]*s+e[13]),r.z=o*(e[2]*i+e[6]*a+e[10]*s+e[14]),r}translate(t,r,e){const i=this.mat4;return i[12]=i[0]*t+i[4]*r+i[8]*e+i[12],i[13]=i[1]*t+i[5]*r+i[9]*e+i[13],i[14]=i[2]*t+i[6]*r+i[10]*e+i[14],i[15]=i[3]*t+i[7]*r+i[11]*e+i[15],this}scale(t,r,e){const i=this.mat4;return i[0]*=t,i[1]*=t,i[2]*=t,i[3]*=t,i[4]*=r,i[5]*=r,i[6]*=r,i[7]*=r,e!==void 0&&(i[8]*=e,i[9]*=e,i[10]*=e,i[11]*=e),this}scaleAndTranslate(t,r,e,i,a,s){const o=this.mat4;o[0]=t*o[0]+i*o[3],o[1]=r*o[1]+a*o[3],o[2]=e*o[2]+s*o[3],o[4]=t*o[4]+i*o[7],o[5]=r*o[5]+a*o[7],o[6]=e*o[6]+s*o[7],o[8]=t*o[8]+i*o[11],o[9]=r*o[9]+a*o[11],o[10]=e*o[10]+s*o[11],o[12]=t*o[12]+i*o[15],o[13]=r*o[13]+a*o[15],o[14]=e*o[14]+s*o[15]}applyInverse(t,r){r=r||new Ct,this._mat4inv||(this._mat4inv=new Float64Array(16));const e=this._mat4inv,i=this.mat4,a=t.x,s=t.y;let o=t.z||0;(!this.cacheInverse||this._updateId!==this._dirtyId)&&(this._updateId=this._dirtyId,H.glMatrixMat4Invert(e,i));const n=1/(e[3]*a+e[7]*s+e[11]*o+e[15]),h=n*(e[0]*a+e[4]*s+e[8]*o+e[12]),p=n*(e[1]*a+e[5]*s+e[9]*o+e[13]),l=n*(e[2]*a+e[6]*s+e[10]*o+e[14]);o+=1;const d=1/(e[3]*a+e[7]*s+e[11]*o+e[15]),u=d*(e[0]*a+e[4]*s+e[8]*o+e[12]),c=d*(e[1]*a+e[5]*s+e[9]*o+e[13]),m=d*(e[2]*a+e[6]*s+e[10]*o+e[14]);Math.abs(l-m)<1e-10&&r.set(NaN,NaN,0);const f=(0-l)/(m-l);return r.set((u-h)*f+h,(c-p)*f+p,0),r}invert(){return H.glMatrixMat4Invert(this.mat4,this.mat4),this}invertCopyTo(t){this._mat4inv||(this._mat4inv=new Float64Array(16));const r=this._mat4inv,e=this.mat4;(!this.cacheInverse||this._updateId!==this._dirtyId)&&(this._updateId=this._dirtyId,H.glMatrixMat4Invert(r,e)),t.mat4.set(r)}identity(){const t=this.mat4;return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}clone(){return new H(this.mat4)}copyTo3d(t){const r=this.mat4,e=t.mat4;return e[0]=r[0],e[1]=r[1],e[2]=r[2],e[3]=r[3],e[4]=r[4],e[5]=r[5],e[6]=r[6],e[7]=r[7],e[8]=r[8],t}copyTo2d(t){const r=this.mat4,e=t.mat3;return e[0]=r[0],e[1]=r[1],e[2]=r[3],e[3]=r[4],e[4]=r[5],e[5]=r[7],e[6]=r[12],e[7]=r[13],e[8]=r[15],t}copyTo2dOr3d(t){return t instanceof z?this.copyTo2d(t):this.copyTo3d(t)}copyTo(t,r,e){const i=this.mat4,a=1/i[15],s=i[12]*a,o=i[13]*a;if(t.a=(i[0]-i[3]*s)*a,t.b=(i[1]-i[3]*o)*a,t.c=(i[4]-i[7]*s)*a,t.d=(i[5]-i[7]*o)*a,t.tx=s,t.ty=o,r>=2){let n=t.a*t.d-t.b*t.c;e||(n=Math.abs(n)),r===X.POINT?(n>0?n=1:n=-1,t.a=n,t.b=0,t.c=0,t.d=n):r===X.AXIS_X?(n/=Math.sqrt(t.b*t.b+t.d*t.d),t.c=0,t.d=n):r===X.AXIS_Y&&(n/=Math.sqrt(t.a*t.a+t.c*t.c),t.a=n,t.c=0)}return t}copyFrom(t){const r=this.mat4;return r[0]=t.a,r[1]=t.b,r[2]=0,r[3]=0,r[4]=t.c,r[5]=t.d,r[6]=0,r[7]=0,r[8]=0,r[9]=0,r[10]=1,r[11]=0,r[12]=t.tx,r[13]=t.ty,r[14]=0,r[15]=1,this._dirtyId++,this}setToMultLegacy(t,r){const e=this.mat4,i=r.mat4,a=t.a,s=t.b,o=t.c,n=t.d,h=t.tx,p=t.ty;let l=i[0],d=i[1],u=i[2],c=i[3];return e[0]=l*a+d*o+c*h,e[1]=l*s+d*n+c*p,e[2]=u,e[3]=c,l=i[4],d=i[5],u=i[6],c=i[7],e[4]=l*a+d*o+c*h,e[5]=l*s+d*n+c*p,e[6]=u,e[7]=c,l=i[8],d=i[9],u=i[10],c=i[11],e[8]=l*a+d*o+c*h,e[9]=l*s+d*n+c*p,e[10]=u,e[11]=c,l=i[12],d=i[13],u=i[14],c=i[15],e[12]=l*a+d*o+c*h,e[13]=l*s+d*n+c*p,e[14]=u,e[15]=c,this._dirtyId++,this}setToMultLegacy2(t,r){const e=this.mat4,i=t.mat4,a=i[0],s=i[1],o=i[2],n=i[3],h=i[4],p=i[5],l=i[6],d=i[7],u=r.a,c=r.b,m=r.c,f=r.d,y=r.tx,x=r.ty;return e[0]=u*a+c*h,e[1]=u*s+c*p,e[2]=u*o+c*l,e[3]=u*n+c*d,e[4]=m*a+f*h,e[5]=m*s+f*p,e[6]=m*o+f*l,e[7]=m*n+f*d,e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=y*a+x*h+i[12],e[13]=y*s+x*p+i[13],e[14]=y*o+x*l+i[14],e[15]=y*n+x*d+i[15],this._dirtyId++,this}setToMult(t,r){return H.glMatrixMat4Multiply(this.mat4,t.mat4,r.mat4),this._dirtyId++,this}prepend(t){t.mat4?this.setToMult(t,this):this.setToMultLegacy(t,this)}static glMatrixMat4Invert(t,r){const e=r[0],i=r[1],a=r[2],s=r[3],o=r[4],n=r[5],h=r[6],p=r[7],l=r[8],d=r[9],u=r[10],c=r[11],m=r[12],f=r[13],y=r[14],x=r[15],g=e*n-i*o,T=e*h-a*o,I=e*p-s*o,w=i*h-a*n,b=i*p-s*n,G=a*p-s*h,A=l*f-d*m,et=l*y-u*m,rt=l*x-c*m,it=d*y-u*f,st=d*x-c*f,at=u*x-c*y;let C=g*at-T*st+I*it+w*rt-b*et+G*A;return C?(C=1/C,t[0]=(n*at-h*st+p*it)*C,t[1]=(a*st-i*at-s*it)*C,t[2]=(f*G-y*b+x*w)*C,t[3]=(u*b-d*G-c*w)*C,t[4]=(h*rt-o*at-p*et)*C,t[5]=(e*at-a*rt+s*et)*C,t[6]=(y*I-m*G-x*T)*C,t[7]=(l*G-u*I+c*T)*C,t[8]=(o*st-n*rt+p*A)*C,t[9]=(i*rt-e*st-s*A)*C,t[10]=(m*b-f*I+x*g)*C,t[11]=(d*I-l*b-c*g)*C,t[12]=(n*et-o*it-h*A)*C,t[13]=(e*it-i*et+a*A)*C,t[14]=(f*T-m*w-y*g)*C,t[15]=(l*w-d*T+u*g)*C,t):null}static glMatrixMat4Multiply(t,r,e){const i=r[0],a=r[1],s=r[2],o=r[3],n=r[4],h=r[5],p=r[6],l=r[7],d=r[8],u=r[9],c=r[10],m=r[11],f=r[12],y=r[13],x=r[14],g=r[15];let T=e[0],I=e[1],w=e[2],b=e[3];return t[0]=T*i+I*n+w*d+b*f,t[1]=T*a+I*h+w*u+b*y,t[2]=T*s+I*p+w*c+b*x,t[3]=T*o+I*l+w*m+b*g,T=e[4],I=e[5],w=e[6],b=e[7],t[4]=T*i+I*n+w*d+b*f,t[5]=T*a+I*h+w*u+b*y,t[6]=T*s+I*p+w*c+b*x,t[7]=T*o+I*l+w*m+b*g,T=e[8],I=e[9],w=e[10],b=e[11],t[8]=T*i+I*n+w*d+b*f,t[9]=T*a+I*h+w*u+b*y,t[10]=T*s+I*p+w*c+b*x,t[11]=T*o+I*l+w*m+b*g,T=e[12],I=e[13],w=e[14],b=e[15],t[12]=T*i+I*n+w*d+b*f,t[13]=T*a+I*h+w*u+b*y,t[14]=T*s+I*p+w*c+b*x,t[15]=T*o+I*l+w*m+b*g,t}};let Q=H;Q.IDENTITY=new H,Q.TEMP_MATRIX=new H;const Qt=new Q;class W extends jt{constructor(r,e){super(r,e),this.cameraMatrix=null,this._cameraMode=!1,this.position=new mt(this.onChange,this,0,0),this.scale=new mt(this.onChange,this,1,1),this.euler=new Ot(this.onChange,this,0,0,0),this.pivot=new mt(this.onChange,this,0,0),this.local=new Q,this.world=new Q,this.local.cacheInverse=!0,this.world.cacheInverse=!0,this.position._z=0,this.scale._z=1,this.pivot._z=0}get cameraMode(){return this._cameraMode}set cameraMode(r){this._cameraMode!==r&&(this._cameraMode=r,this.euler._sign=this._cameraMode?-1:1,this.euler._quatDirtyId++,r&&(this.cameraMatrix=new Q))}onChange(){this._projID++}clear(){this.cameraMatrix&&this.cameraMatrix.identity(),this.position.set(0,0,0),this.scale.set(1,1,1),this.euler.set(0,0,0),this.pivot.set(0,0,0),super.clear()}updateLocalTransform(r){if(this._projID===0){this.local.copyFrom(r);return}const e=this.local,i=this.euler,a=this.position,s=this.scale,o=this.pivot;if(i.update(),!this.cameraMode){e.setToRotationTranslationScale(i.quaternion,a._x,a._y,a._z,s._x,s._y,s._z),e.translate(-o._x,-o._y,-o._z),e.setToMultLegacy(r,e);return}e.setToMultLegacy(r,this.cameraMatrix),e.translate(o._x,o._y,o._z),e.scale(1/s._x,1/s._y,1/s._z),Qt.setToRotationTranslationScale(i.quaternion,0,0,0,1,1,1),e.setToMult(e,Qt),e.translate(-a._x,-a._y,-a._z),this.local._dirtyId++}}function $t(){return this.proj.affine?this.transform.worldTransform:this.proj.world}class B extends D.Container{constructor(){super(),this.proj=new W(this.transform)}isFrontFace(r=!1){r&&(this._recursivePostUpdateTransform(),this.displayObjectUpdateTransform());const e=this.proj.world.mat4,i=e[0]*e[15]-e[3]*e[12],a=e[1]*e[15]-e[3]*e[13],s=e[4]*e[15]-e[7]*e[12],o=e[5]*e[15]-e[7]*e[13];return i*o-s*a>0}getDepth(r=!1){r&&(this._recursivePostUpdateTransform(),this.displayObjectUpdateTransform());const e=this.proj.world.mat4;return e[14]/e[15]}toLocal(r,e,i,a,s=U.ALL){return e&&(r=e.toGlobal(r,i,a)),a||this._recursivePostUpdateTransform(),s===U.ALL?(a||this.displayObjectUpdateTransform(),this.proj.affine?this.transform.worldTransform.applyInverse(r,i):this.proj.world.applyInverse(r,i)):(this.parent?i=this.parent.worldTransform.applyInverse(r,i):(i.x=r.x,i.y=r.y,i.z=r.z),s===U.NONE||(i=this.transform.localTransform.applyInverse(i,i),s===U.PROJ&&this.proj.cameraMode&&(i=this.proj.cameraMatrix.applyInverse(i,i))),i)}get worldTransform(){return this.proj.affine?this.transform.worldTransform:this.proj.world}get position3d(){return this.proj.position}set position3d(r){this.proj.position.copyFrom(r)}get scale3d(){return this.proj.scale}set scale3d(r){this.proj.scale.copyFrom(r)}get euler(){return this.proj.euler}set euler(r){this.proj.euler.copyFrom(r)}get pivot3d(){return this.proj.pivot}set pivot3d(r){this.proj.pivot.copyFrom(r)}}const yt=B.prototype.toLocal,_t=B.prototype.getDepth,xt=B.prototype.isFrontFace;class Ce extends B{constructor(){super(),this._far=0,this._near=0,this._focus=0,this._orthographic=!1,this.proj.cameraMode=!0,this.setPlanes(400,10,1e4,!1)}get far(){return this._far}get near(){return this._near}get focus(){return this._focus}get ortographic(){return this._orthographic}setPlanes(r,e=10,i=1e4,a=!1){this._focus=r,this._near=e,this._far=i,this._orthographic=a;const s=this.proj,o=s.cameraMatrix.mat4;s._projID++,o[10]=1/(i-e),o[14]=(r-e)/(i-e),this._orthographic?o[11]=0:o[11]=1/r}}class K extends k.Mesh{constructor(r,e,i,a){super(r,e,i,a),this.vertexData2d=null,this.proj=new W(this.transform)}calculateVertices(){if(this.proj._affine){this.vertexData2d=null,super.calculateVertices();return}const r=this.geometry,e=r.buffers[0].data,i=this;if(r.vertexDirtyId===i.vertexDirty&&i._transformID===i.transform._worldID)return;i._transformID=i.transform._worldID,i.vertexData.length!==e.length&&(i.vertexData=new Float32Array(e.length)),(!this.vertexData2d||this.vertexData2d.length!==e.length*3/2)&&(this.vertexData2d=new Float32Array(e.length*3));const a=this.proj.world.mat4,s=this.vertexData2d,o=i.vertexData;for(let n=0;n<o.length/2;n++){const h=e[n*2],p=e[n*2+1],l=a[0]*h+a[4]*p+a[12],d=a[1]*h+a[5]*p+a[13],u=a[3]*h+a[7]*p+a[15];s[n*3]=l,s[n*3+1]=d,s[n*3+2]=u,o[n*2]=l/u,o[n*2+1]=d/u}i.vertexDirty=r.vertexDirtyId}get worldTransform(){return this.proj.affine?this.transform.worldTransform:this.proj.world}toLocal(r,e,i,a,s=U.ALL){return yt.call(this,r,e,i,a,s)}isFrontFace(r){return xt.call(this,r)}getDepth(r){return _t.call(this,r)}get position3d(){return this.proj.position}set position3d(r){this.proj.position.copyFrom(r)}get scale3d(){return this.proj.scale}set scale3d(r){this.proj.scale.copyFrom(r)}get euler(){return this.proj.euler}set euler(r){this.proj.euler.copyFrom(r)}get pivot3d(){return this.proj.pivot}set pivot3d(r){this.proj.pivot.copyFrom(r)}}K.prototype._renderDefault=F.prototype._renderDefault;class Jt extends K{constructor(r,e,i,a,s){super(new k.MeshGeometry(e,i,a),new k.MeshMaterial(r,{program:j.Program.from(F.defaultVertexShader,F.defaultFragmentShader),pluginName:"batch2d"}),null,s),this.autoUpdate=!0,this.geometry.getBuffer("aVertexPosition").static=!1}get vertices(){return this.geometry.getBuffer("aVertexPosition").data}set vertices(r){this.geometry.getBuffer("aVertexPosition").data=r}_render(r){this.autoUpdate&&this.geometry.getBuffer("aVertexPosition").update(),super._render(r)}}class V extends Z.Sprite{constructor(r){super(r),this.vertexData2d=null,this.culledByFrustrum=!1,this.trimmedCulledByFrustrum=!1,this.proj=new W(this.transform),this.pluginName="batch2d"}calculateVertices(){const r=this._texture;if(this.proj._affine){this.vertexData2d=null,super.calculateVertices();return}this.vertexData2d||(this.vertexData2d=new Float32Array(12));const e=this.transform._worldID,i=r._updateID,a=this;if(a._transformID===e&&this._textureID===i)return;this._textureID!==i&&(this.uvs=r._uvs.uvsFloat32),a._transformID=e,this._textureID=i;const s=this.proj.world.mat4,o=this.vertexData2d,n=this.vertexData,h=r.trim,p=r.orig,l=this._anchor;let d,u,c,m;h?(u=h.x-l._x*p.width,d=u+h.width,m=h.y-l._y*p.height,c=m+h.height):(u=-l._x*p.width,d=u+p.width,m=-l._y*p.height,c=m+p.height);let f=!1,y;o[0]=s[0]*u+s[4]*m+s[12],o[1]=s[1]*u+s[5]*m+s[13],y=s[2]*u+s[6]*m+s[14],o[2]=s[3]*u+s[7]*m+s[15],f=f||y<0,o[3]=s[0]*d+s[4]*m+s[12],o[4]=s[1]*d+s[5]*m+s[13],y=s[2]*d+s[6]*m+s[14],o[5]=s[3]*d+s[7]*m+s[15],f=f||y<0,o[6]=s[0]*d+s[4]*c+s[12],o[7]=s[1]*d+s[5]*c+s[13],y=s[2]*d+s[6]*c+s[14],o[8]=s[3]*d+s[7]*c+s[15],f=f||y<0,o[9]=s[0]*u+s[4]*c+s[12],o[10]=s[1]*u+s[5]*c+s[13],y=s[2]*u+s[6]*c+s[14],o[11]=s[3]*u+s[7]*c+s[15],f=f||y<0,this.culledByFrustrum=f,n[0]=o[0]/o[2],n[1]=o[1]/o[2],n[2]=o[3]/o[5],n[3]=o[4]/o[5],n[4]=o[6]/o[8],n[5]=o[7]/o[8],n[6]=o[9]/o[11],n[7]=o[10]/o[11]}calculateTrimmedVertices(){if(this.proj._affine){super.calculateTrimmedVertices();return}const r=this.transform._worldID,e=this._texture._updateID,i=this;if(!i.vertexTrimmedData)i.vertexTrimmedData=new Float32Array(8);else if(i._transformTrimmedID===r&&this._textureTrimmedID===e)return;i._transformTrimmedID=r,this._textureTrimmedID=e;const a=this._texture,s=i.vertexTrimmedData,o=a.orig,n=this._anchor,h=this.proj.world.mat4,p=-n._x*o.width,l=p+o.width,d=-n._y*o.height,u=d+o.height;let c=!1,m,f=1/(h[3]*p+h[7]*d+h[15]);s[0]=f*(h[0]*p+h[4]*d+h[12]),s[1]=f*(h[1]*p+h[5]*d+h[13]),m=h[2]*p+h[6]*d+h[14],c=c||m<0,f=1/(h[3]*l+h[7]*d+h[15]),s[2]=f*(h[0]*l+h[4]*d+h[12]),s[3]=f*(h[1]*l+h[5]*d+h[13]),m=h[2]*l+h[6]*d+h[14],c=c||m<0,f=1/(h[3]*l+h[7]*u+h[15]),s[4]=f*(h[0]*l+h[4]*u+h[12]),s[5]=f*(h[1]*l+h[5]*u+h[13]),m=h[2]*l+h[6]*u+h[14],c=c||m<0,f=1/(h[3]*p+h[7]*u+h[15]),s[6]=f*(h[0]*p+h[4]*u+h[12]),s[7]=f*(h[1]*p+h[5]*u+h[13]),m=h[2]*p+h[6]*u+h[14],c=c||m<0,this.culledByFrustrum=c}_calculateBounds(){if(this.calculateVertices(),this.culledByFrustrum)return;const r=this._texture.trim,e=this._texture.orig;if(!r||r.width===e.width&&r.height===e.height){this._bounds.addQuad(this.vertexData);return}this.calculateTrimmedVertices(),this.trimmedCulledByFrustrum||this._bounds.addQuad(this.vertexTrimmedData)}_render(r){this.calculateVertices(),!this.culledByFrustrum&&(r.batch.setObjectRenderer(r.plugins[this.pluginName]),r.plugins[this.pluginName].render(this))}containsPoint(r){return this.culledByFrustrum?!1:super.containsPoint(r)}get worldTransform(){return this.proj.affine?this.transform.worldTransform:this.proj.world}toLocal(r,e,i,a,s=U.ALL){return yt.call(this,r,e,i,a,s)}isFrontFace(r){return xt.call(this,r)}getDepth(r){return _t.call(this,r)}get position3d(){return this.proj.position}set position3d(r){this.proj.position.copyFrom(r)}get scale3d(){return this.proj.scale}set scale3d(r){this.proj.scale.copyFrom(r)}get euler(){return this.proj.euler}set euler(r){this.proj.euler.copyFrom(r)}get pivot3d(){return this.proj.pivot}set pivot3d(r){this.proj.pivot.copyFrom(r)}}const Pe={worldTransform:{get:$t,enumerable:!0,configurable:!0},position3d:{get(){return this.proj.position},set(t){this.proj.position.copy(t)}},scale3d:{get(){return this.proj.scale},set(t){this.proj.scale.copy(t)}},pivot3d:{get(){return this.proj.pivot},set(t){this.proj.pivot.copy(t)}},euler:{get(){return this.proj.euler},set(t){this.proj.euler.copy(t)}}};function Pt(){this.proj||(this.proj=new W(this.transform),this.toLocal=B.prototype.toLocal,this.isFrontFace=B.prototype.isFrontFace,this.getDepth=B.prototype.getDepth,Object.defineProperties(this,Pe))}D.Container.prototype.convertTo3d=Pt,Z.Sprite.prototype.convertTo3d=function(){this.proj||(this.calculateVertices=V.prototype.calculateVertices,this.calculateTrimmedVertices=V.prototype.calculateTrimmedVertices,this._calculateBounds=V.prototype._calculateBounds,this.containsPoint=V.prototype.containsPoint,this.pluginName="batch2d",Pt.call(this))},D.Container.prototype.convertSubtreeTo3d=function(){this.convertTo3d();for(let t=0;t<this.children.length;t++)this.children[t].convertSubtreeTo3d()},ot.SimpleMesh.prototype.convertTo3d=ot.SimpleRope.prototype.convertTo3d=function(){this.proj||(this.calculateVertices=K.prototype.calculateVertices,this._renderDefault=K.prototype._renderDefault,this.material.pluginName!=="batch2d"&&(this.material=new k.MeshMaterial(this.material.texture,{program:j.Program.from(F.defaultVertexShader,F.defaultFragmentShader),pluginName:"batch2d"})),Pt.call(this))};class S extends It.Text{constructor(r,e,i){super(r,e,i),this.vertexData2d=null,this.proj=new W(this.transform),this.pluginName="batch2d"}get worldTransform(){return this.proj.affine?this.transform.worldTransform:this.proj.world}toLocal(r,e,i,a,s=U.ALL){return yt.call(this,r,e,i,a,s)}isFrontFace(r){return xt.call(this,r)}getDepth(r){return _t.call(this,r)}get position3d(){return this.proj.position}set position3d(r){this.proj.position.copyFrom(r)}get scale3d(){return this.proj.scale}set scale3d(r){this.proj.scale.copyFrom(r)}get euler(){return this.proj.euler}set euler(r){this.proj.euler.copyFrom(r)}get pivot3d(){return this.proj.pivot}set pivot3d(r){this.proj.pivot.copyFrom(r)}}S.prototype.calculateVertices=V.prototype.calculateVertices,S.prototype.calculateTrimmedVertices=V.prototype.calculateTrimmedVertices,S.prototype._calculateBounds=V.prototype._calculateBounds,S.prototype.containsPoint=V.prototype.containsPoint,S.prototype._render=V.prototype._render;const Ue=`precision highp float;
attribute vec2 aVertexPosition;
attribute vec3 aTrans1;
attribute vec3 aTrans2;
attribute vec2 aSamplerSize;
attribute vec4 aFrame;
attribute vec4 aColor;
attribute float aTextureId;

uniform mat3 projectionMatrix;
uniform mat3 translationMatrix;

varying vec2 vertexPosition;
varying vec3 vTrans1;
varying vec3 vTrans2;
varying vec2 vSamplerSize;
varying vec4 vFrame;
varying vec4 vColor;
varying float vTextureId;

void main(void){
gl_Position.xyw = projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0);
gl_Position.z = 0.0;

vertexPosition = aVertexPosition;
vTrans1 = aTrans1;
vTrans2 = aTrans2;
vTextureId = aTextureId;
vColor = aColor;
vSamplerSize = aSamplerSize;
vFrame = aFrame;
}
`,Fe=`precision highp float;
varying vec2 vertexPosition;
varying vec3 vTrans1;
varying vec3 vTrans2;
varying vec2 vSamplerSize;
varying vec4 vFrame;
varying vec4 vColor;
varying float vTextureId;

uniform sampler2D uSamplers[%count%];
uniform vec4 distortion;

void main(void){
vec2 surface;
vec2 surface2;

float vx = vertexPosition.x;
float vy = vertexPosition.y;
float dx = distortion.x;
float dy = distortion.y;
float revx = distortion.z;
float revy = distortion.w;

if (distortion.x == 0.0) {
surface.x = vx;
surface.y = vy / (1.0 + dy * vx);
surface2 = surface;
} else
if (distortion.y == 0.0) {
surface.y = vy;
surface.x = vx / (1.0 + dx * vy);
surface2 = surface;
} else {
float c = vy * dx - vx * dy;
float b = (c + 1.0) * 0.5;
float b2 = (-c + 1.0) * 0.5;
float d = b * b + vx * dy;
if (d < -0.00001) {
    discard;
}
d = sqrt(max(d, 0.0));
surface.x = (- b + d) * revy;
surface2.x = (- b - d) * revy;
surface.y = (- b2 + d) * revx;
surface2.y = (- b2 - d) * revx;
}

vec2 uv;
uv.x = vTrans1.x * surface.x + vTrans1.y * surface.y + vTrans1.z;
uv.y = vTrans2.x * surface.x + vTrans2.y * surface.y + vTrans2.z;

vec2 pixels = uv * vSamplerSize;

if (pixels.x < vFrame.x || pixels.x > vFrame.z ||
pixels.y < vFrame.y || pixels.y > vFrame.w) {
uv.x = vTrans1.x * surface2.x + vTrans1.y * surface2.y + vTrans1.z;
uv.y = vTrans2.x * surface2.x + vTrans2.y * surface2.y + vTrans2.z;
pixels = uv * vSamplerSize;

if (pixels.x < vFrame.x || pixels.x > vFrame.z ||
   pixels.y < vFrame.y || pixels.y > vFrame.w) {
   discard;
}
}

vec4 edge;
edge.xy = clamp(pixels - vFrame.xy + 0.5, vec2(0.0, 0.0), vec2(1.0, 1.0));
edge.zw = clamp(vFrame.zw - pixels + 0.5, vec2(0.0, 0.0), vec2(1.0, 1.0));

float alpha = 1.0; //edge.x * edge.y * edge.z * edge.w;
vec4 rColor = vColor * alpha;

float textureId = floor(vTextureId+0.5);
vec2 vTextureCoord = uv;
vec4 color;
%forloop%
gl_FragColor = color * rColor;
}`;class Zt extends j.Geometry{constructor(r=!1){super(),this._buffer=new j.Buffer(null,r,!1),this._indexBuffer=new j.Buffer(null,r,!0),this.addAttribute("aVertexPosition",this._buffer,2,!1,R.FLOAT).addAttribute("aTrans1",this._buffer,3,!1,R.FLOAT).addAttribute("aTrans2",this._buffer,3,!1,R.FLOAT).addAttribute("aSamplerSize",this._buffer,2,!1,R.FLOAT).addAttribute("aFrame",this._buffer,4,!1,R.FLOAT).addAttribute("aColor",this._buffer,4,!0,R.UNSIGNED_BYTE).addAttribute("aTextureId",this._buffer,1,!0,R.FLOAT).addIndex(this._indexBuffer)}}class Ut extends Lt{constructor(r){super(r),this.defUniforms={translationMatrix:new N.Matrix,distortion:new Float32Array([0,0,1/0,1/0])},this.size=1e3,this.forceMaxTextures=1,this.vertexSize=16,this.geometryClass=Zt}setShaderGenerator(){this.shaderGenerator=new j.BatchShaderGenerator(Ue,Fe)}getUniforms(r){const{proj:e}=r;return e.surface!==null?e.uniforms:e._activeProjection!==null?e._activeProjection.uniforms:this.defUniforms}packInterleavedGeometry(r,e,i,a,s){const{uint32View:o,float32View:n}=e,h=a/this.vertexSize,p=r.indices,l=r.vertexData,d=r._texture._frame,u=r.aTrans,{_batchLocation:c,realWidth:m,realHeight:f,resolution:y}=r._texture.baseTexture,x=Math.min(r.worldAlpha,1),g=j.Color.shared.setValue(r._tintRGB).toPremultiplied(x);for(let T=0;T<l.length;T+=2)n[a]=l[T],n[a+1]=l[T+1],n[a+2]=u.a,n[a+3]=u.c,n[a+4]=u.tx,n[a+5]=u.b,n[a+6]=u.d,n[a+7]=u.ty,n[a+8]=m,n[a+9]=f,n[a+10]=d.x*y,n[a+11]=d.y*y,n[a+12]=(d.x+d.width)*y,n[a+13]=(d.y+d.height)*y,o[a+14]=g,n[a+15]=c,a+=16;for(let T=0;T<p.length;T++)i[s++]=h+p[T]}}Ut.extension={name:"batch_bilinear",type:j.ExtensionType.RendererPlugin};const _=[new N.Point,new N.Point,new N.Point,new N.Point],$=[0,0,0,0];class Wt{constructor(){this.surfaceID="default",this._updateID=0,this.vertexSrc="",this.fragmentSrc=""}fillUniforms(r){}clear(){}boundsQuad(r,e,i){let a=e[0],s=e[1],o=e[0],n=e[1];for(let h=2;h<8;h+=2)a>e[h]&&(a=e[h]),o<e[h]&&(o=e[h]),s>e[h+1]&&(s=e[h+1]),n<e[h+1]&&(n=e[h+1]);if(_[0].set(a,s),this.apply(_[0],_[0]),_[1].set(o,s),this.apply(_[1],_[1]),_[2].set(o,n),this.apply(_[2],_[2]),_[3].set(a,n),this.apply(_[3],_[3]),i)i.apply(_[0],_[0]),i.apply(_[1],_[1]),i.apply(_[2],_[2]),i.apply(_[3],_[3]),e[0]=_[0].x,e[1]=_[0].y,e[2]=_[1].x,e[3]=_[1].y,e[4]=_[2].x,e[5]=_[2].y,e[6]=_[3].x,e[7]=_[3].y;else{for(let h=1;h<=3;h++)if(_[h].y<_[0].y||_[h].y===_[0].y&&_[h].x<_[0].x){const p=_[0];_[0]=_[h],_[h]=p}for(let h=1;h<=3;h++)$[h]=Math.atan2(_[h].y-_[0].y,_[h].x-_[0].x);for(let h=1;h<=3;h++)for(let p=h+1;p<=3;p++)if($[h]>$[p]){const l=_[h];_[h]=_[p],_[p]=l;const d=$[h];$[h]=$[p],$[p]=d}if(e[0]=_[0].x,e[1]=_[0].y,e[2]=_[1].x,e[3]=_[1].y,e[4]=_[2].x,e[5]=_[2].y,e[6]=_[3].x,e[7]=_[3].y,(_[3].x-_[2].x)*(_[1].y-_[2].y)-(_[1].x-_[2].x)*(_[3].y-_[2].y)<0){e[4]=_[3].x,e[5]=_[3].y;return}}}}const Ae=new N.Matrix,Y=new N.Rectangle,tt=new N.Point;class Ft extends Wt{constructor(){super(...arguments),this.distortion=new N.Point}clear(){this.distortion.set(0,0)}apply(r,e){e=e||new N.Point;const i=this.distortion,a=r.x*r.y;return e.x=r.x+i.x*a,e.y=r.y+i.y*a,e}applyInverse(r,e){e=e||new N.Point;const i=r.x,a=r.y,s=this.distortion.x,o=this.distortion.y;if(s===0)e.x=i,e.y=a/(1+o*i);else if(o===0)e.y=a,e.x=i/(1+s*a);else{const n=(a*s-i*o+1)*.5/o,h=n*n+i/o;if(h<=1e-5)return e.set(NaN,NaN),e;o>0?e.x=-n+Math.sqrt(h):e.x=-n-Math.sqrt(h),e.y=(i/e.x-1)/s}return e}mapSprite(r,e,i){const a=r.texture;return Y.x=-r.anchor.x*a.orig.width,Y.y=-r.anchor.y*a.orig.height,Y.width=a.orig.width,Y.height=a.orig.height,this.mapQuad(Y,e,i||r.transform)}mapQuad(r,e,i){const a=-r.x/r.width,s=-r.y/r.height,o=(1-r.x)/r.width,n=(1-r.y)/r.height,h=e[0].x*(1-a)+e[1].x*a,p=e[0].y*(1-a)+e[1].y*a,l=e[0].x*(1-o)+e[1].x*o,d=e[0].y*(1-o)+e[1].y*o,u=e[3].x*(1-a)+e[2].x*a,c=e[3].y*(1-a)+e[2].y*a,m=e[3].x*(1-o)+e[2].x*o,f=e[3].y*(1-o)+e[2].y*o,y=h*(1-s)+u*s,x=p*(1-s)+c*s,g=l*(1-s)+m*s,T=d*(1-s)+f*s,I=h*(1-n)+u*n,w=p*(1-n)+c*n,b=l*(1-n)+m*n,G=d*(1-n)+f*n,A=Ae;return A.tx=y,A.ty=x,A.a=g-y,A.b=T-x,A.c=I-y,A.d=w-x,tt.set(b,G),A.applyInverse(tt,tt),this.distortion.set(tt.x-1,tt.y-1),i.setFromMatrix(A),this}fillUniforms(r){r.distortion=r.distortion||new Float32Array([0,0,0,0]);const e=Math.abs(this.distortion.x),i=Math.abs(this.distortion.y);r.distortion[0]=e*1e4<=i?0:this.distortion.x,r.distortion[1]=i*1e4<=e?0:this.distortion.y,r.distortion[2]=1/r.distortion[0],r.distortion[3]=1/r.distortion[1]}}const St=N.Transform.prototype.updateTransform;function Re(t){const r=this.proj,e=t.proj,i=this;if(!e){St.call(this,t),r._activeProjection=null;return}if(e._surface){r._activeProjection=e,this.updateLocalTransform(),this.localTransform.copyTo(this.worldTransform),i._parentID<0&&++i._worldID;return}St.call(this,t),r._activeProjection=e._activeProjection}class vt extends bt{constructor(){super(...arguments),this._surface=null,this._activeProjection=null,this._currentSurfaceID=-1,this._currentLegacyID=-1,this._lastUniforms=null}set enabled(r){r!==this._enabled&&(this._enabled=r,r?(this.legacy.updateTransform=Re,this.legacy._parentID=-1):(this.legacy.updateTransform=N.Transform.prototype.updateTransform,this.legacy._parentID=-1))}get surface(){return this._surface}set surface(r){this._surface!==r&&(this._surface=r||null,this.legacy._parentID=-1)}applyPartial(r,e){return this._activeProjection!==null?(e=this.legacy.worldTransform.apply(r,e),this._activeProjection.surface.apply(e,e)):this._surface!==null?this.surface.apply(r,e):this.legacy.worldTransform.apply(r,e)}apply(r,e){return this._activeProjection!==null?(e=this.legacy.worldTransform.apply(r,e),this._activeProjection.surface.apply(e,e),this._activeProjection.legacy.worldTransform.apply(e,e)):this._surface!==null?(e=this.surface.apply(r,e),this.legacy.worldTransform.apply(e,e)):this.legacy.worldTransform.apply(r,e)}applyInverse(r,e){return this._activeProjection!==null?(e=this._activeProjection.legacy.worldTransform.applyInverse(r,e),this._activeProjection._surface.applyInverse(e,e),this.legacy.worldTransform.applyInverse(e,e)):this._surface!==null?(e=this.legacy.worldTransform.applyInverse(r,e),this._surface.applyInverse(e,e)):this.legacy.worldTransform.applyInverse(r,e)}mapBilinearSprite(r,e){this._surface instanceof Ft||(this.surface=new Ft),this.surface.mapSprite(r,e,this.legacy)}clear(){this.surface&&this.surface.clear()}get uniforms(){return this._currentLegacyID===this.legacy._worldID&&this._currentSurfaceID===this.surface._updateID?this._lastUniforms:(this._lastUniforms=this._lastUniforms||{},this._lastUniforms.translationMatrix=this.legacy.worldTransform,this._surface.fillUniforms(this._lastUniforms),this._lastUniforms)}}class J extends Z.Sprite{constructor(r){super(r),this.aTrans=new N.Matrix,this.proj=new vt(this.transform),this.pluginName="batch_bilinear"}_calculateBounds(){this.calculateTrimmedVertices(),this._bounds.addQuad(this.vertexTrimmedData)}calculateVertices(){const r=this.transform._worldID,e=this._texture._updateID,i=this;if(i._transformID===r&&this._textureID===e)return;i._transformID=r,this._textureID=e;const a=this._texture,s=this.vertexData,o=a.trim,n=a.orig,h=this._anchor;let p,l,d,u;if(o?(l=o.x-h._x*n.width,p=l+o.width,u=o.y-h._y*n.height,d=u+o.height):(l=-h._x*n.width,p=l+n.width,u=-h._y*n.height,d=u+n.height),this.proj._surface)s[0]=l,s[1]=u,s[2]=p,s[3]=u,s[4]=p,s[5]=d,s[6]=l,s[7]=d,this.proj._surface.boundsQuad(s,s);else{const m=this.transform.worldTransform,f=m.a,y=m.b,x=m.c,g=m.d,T=m.tx,I=m.ty;s[0]=f*l+x*u+T,s[1]=g*u+y*l+I,s[2]=f*p+x*u+T,s[3]=g*u+y*p+I,s[4]=f*p+x*d+T,s[5]=g*d+y*p+I,s[6]=f*l+x*d+T,s[7]=g*d+y*l+I,this.proj._activeProjection&&this.proj._activeProjection.surface.boundsQuad(s,s)}a.uvMatrix||(a.uvMatrix=new j.TextureMatrix(a)),a.uvMatrix.update();const c=this.aTrans;c.set(n.width,0,0,n.height,l,u),this.proj._surface===null&&c.prepend(this.transform.worldTransform),c.invert(),c.prepend(a.uvMatrix.mapCoord)}calculateTrimmedVertices(){const r=this.transform._worldID,e=this._texture._updateID,i=this;if(!i.vertexTrimmedData)i.vertexTrimmedData=new Float32Array(8);else if(i._transformTrimmedID===r&&this._textureTrimmedID===e)return;i._transformTrimmedID=r,this._textureTrimmedID=e;const a=this._texture,s=i.vertexTrimmedData,o=a.orig,n=this._anchor,h=-n._x*o.width,p=h+o.width,l=-n._y*o.height,d=l+o.height;if(this.proj._surface)s[0]=h,s[1]=l,s[2]=p,s[3]=l,s[4]=p,s[5]=d,s[6]=h,s[7]=d,this.proj._surface.boundsQuad(s,s,this.transform.worldTransform);else{const u=this.transform.worldTransform,c=u.a,m=u.b,f=u.c,y=u.d,x=u.tx,g=u.ty;s[0]=c*h+f*l+x,s[1]=y*l+m*h+g,s[2]=c*p+f*l+x,s[3]=y*l+m*p+g,s[4]=c*p+f*d+x,s[5]=y*d+m*p+g,s[6]=c*h+f*d+x,s[7]=y*d+m*h+g,this.proj._activeProjection&&this.proj._activeProjection.surface.boundsQuad(s,s,this.proj._activeProjection.legacy.worldTransform)}}get worldTransform(){return this.proj}}Z.Sprite.prototype.convertTo2s=function(){this.proj||(this.pluginName="sprite_bilinear",this.aTrans=new N.Matrix,this.calculateVertices=J.prototype.calculateVertices,this.calculateTrimmedVertices=J.prototype.calculateTrimmedVertices,this._calculateBounds=J.prototype._calculateBounds,D.Container.prototype.convertTo2s.call(this))},D.Container.prototype.convertTo2s=function(){this.proj||(this.proj=new vt(this.transform),Object.defineProperty(this,"worldTransform",{get(){return this.proj},enumerable:!0,configurable:!0}))},D.Container.prototype.convertSubtreeTo2s=function(){this.convertTo2s();for(let t=0;t<this.children.length;t++)this.children[t].convertSubtreeTo2s()};class Tt extends It.Text{constructor(r,e,i){super(r,e,i),this.aTrans=new N.Matrix,this.proj=new vt(this.transform),this.pluginName="batch_bilinear"}get worldTransform(){return this.proj}}Tt.prototype.calculateVertices=J.prototype.calculateVertices,Tt.prototype.calculateTrimmedVertices=J.prototype.calculateTrimmedVertices,Tt.prototype._calculateBounds=J.prototype._calculateBounds,j.extensions.add(Ut);function ze(t){t.newMesh=function(r,e,i,a,s){return new Bt(r,e,i,a,s)},t.newContainer=function(){return this.proj||this.convertTo2d(),new lt},t.newSprite=function(r){return new L(r)},t.newGraphics=function(){const r=new Rt.Graphics;return r.convertTo2d(),r},t.transformHack=function(){return 2}}function Ve(t){t.newMesh=function(r,e,i,a,s){return new Jt(r,e,i,a,s)},t.newContainer=function(){return this.proj||this.convertTo3d(),new B},t.newSprite=function(r){return new V(r)},t.newGraphics=function(){const r=new Rt.Graphics;return r.convertTo3d(),r},t.transformHack=function(){return 2}}return v.AFFINE=X,v.AbstractProjection=bt,v.Batch2dRenderer=wt,v.Batch3dGeometry=Vt,v.BatchBilinearGeometry=Zt,v.BatchBilinearRenderer=Ut,v.BilinearSurface=Ft,v.Camera3d=Ce,v.Container2d=lt,v.Container3d=B,v.Euler=ft,v.LinearProjection=jt,v.Matrix2d=z,v.Matrix3d=Q,v.Mesh2d=F,v.Mesh3d2d=K,v.ObservableEuler=Ot,v.ObservablePoint3d=mt,v.Point3d=Ct,v.Projection2d=q,v.Projection3d=W,v.ProjectionSurface=vt,v.SimpleMesh2d=Bt,v.SimpleMesh3d2d=Jt,v.Sprite2d=L,v.Sprite2s=J,v.Sprite3d=V,v.SpriteMaskFilter2d=pt,v.Surface=Wt,v.TRANSFORM_STEP=U,v.Text2d=dt,v.Text2s=Tt,v.Text3d=S,v.TilingSprite2d=kt,v.TilingSprite2dRenderer=Nt,v.UniformBatchRenderer=Lt,v.applySpine2dMixin=ze,v.applySpine3dMixin=Ve,v.container2dToLocal=ct,v.container2dWorldTransform=qt,v.container3dGetDepth=_t,v.container3dIsFrontFace=xt,v.container3dToLocal=yt,v.container3dWorldTransform=$t,v.getIntersectionFactor=Gt,v.getPositionFromQuad=ye,v.patchSpriteMask=je,v.transformHack=Mt,v}({},PIXI,PIXI,PIXI.utils,PIXI,PIXI,PIXI,PIXI,PIXI,PIXI,PIXI);
//# sourceMappingURL=pixi-projection.js.map
